===import pandas as pd
import tkinter as tk
from tkinter import messagebox

# Carregar o arquivo CSV em um DataFrame do pandas
df = pd.read_csv('metacritic_movies_2019.csv')

# Definir a função para obter um filme aleatório que se encaixe nos critérios
def obter_filme_aleatorio(ano_min, ano_max, meta_min, genero_selecionado):
   filmes_filtrados = df[(df['ano'] >= ano_min) & (df['ano'] <= ano_max) & (df['nota'] >= meta_min) & (df['genero'].str.contains(genero_selecionado, case=False))]
   if filmes_filtrados.empty:
       return "Nenhum filme encontrado com os critérios especificados."
   else:
       filme_aleatorio = filmes_filtrados.sample()
       nome = filme_aleatorio['nome'].values[0]
       ano = filme_aleatorio['ano'].values[0]
       generos = filme_aleatorio['genero'].values[0].title()
       return nome, ano, generos

def click_button():
   try:
       ano_min = int(ano_min_entry.get())
       ano_max = int(ano_max_entry.get())
       meta_min = int(meta_min_entry.get())
       genero_selecionado = genero_selected_label.cget("text").split(": ")[1]

       nome, ano, generos = obter_filme_aleatorio(ano_min, ano_max, meta_min, genero_selecionado)
       messagebox.showinfo("Filme Selecionado", f"Nome: {nome}\nAno de Lançamento: {ano}\nGêneros: {generos}")
   except ValueError:
       messagebox.showerror("Erro", "Certifique-se de que os valores inseridos sejam números inteiros.")

   # Esconder a lista de gêneros
   genero_frame.pack_forget()

# Configuração da interface gráfica
window = tk.Tk()
window.title("Seletor de Filmes")
window.geometry("400x250")

# Adicionar rótulos e campos de entrada
ano_min_label = tk.Label(window, text="Ano Mínimo (1930-2023):")
ano_min_label.pack()
ano_min_entry = tk.Entry(window)
ano_min_entry.pack()

ano_max_label = tk.Label(window, text="Ano Máximo (1930-2023):")
ano_max_label.pack()
ano_max_entry = tk.Entry(window)
ano_max_entry.pack()

meta_min_label = tk.Label(window, text="Mínimo do Metascore (0-100):")
meta_min_label.pack()
meta_min_entry = tk.Entry(window)
meta_min_entry.pack()

# Adicionar botão de expansão para a lista de gêneros
def show_genero_list():
   genero_frame.pack()

genero_expand_button = tk.Button(window, text="▼ Gênero", command=show_genero_list)
genero_expand_button.pack()

# Adicionar frame para conter a lista de gêneros
genero_frame = tk.Frame(window)

# Adicionar lista de gêneros ao frame
genero_label = tk.Label(genero_frame, text="Selecionar Gênero:")
genero_label.pack()
generos = [ "action", "adventure", "animation", "biography", "comedy", "crime", "documentary", "drama", "family", "fantasy", "history", "horror", "music", "mystery", "romance", "sci-fi", "sport", "thriller", "war", "western"]

def on_select(event):
   widget = event.widget
   selection = widget.curselection()
   value = widget.get(selection[0])
   genero_selected_label.config(text=f"Gênero Selecionado: {value.title()}")
   genero_frame.pack_forget()

genero_listbox = tk.Listbox(genero_frame, selectmode=tk.SINGLE)
genero_listbox.bind('<<ListboxSelect>>', on_select)
for genero in generos:
   genero_listbox.insert(tk.END, genero)
genero_listbox.pack()

genero_selected_label = tk.Label(window, text="")
genero_selected_label.pack()

genero_frame.pack_forget()

# Adicionar botão
button = tk.Button(window, text="Gerar Filme Aleatório", command=click_button)
button.pack()

# Iniciar a interface gráfica
window.mainloop()
